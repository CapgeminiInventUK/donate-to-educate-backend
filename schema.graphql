type SignUpData {
  id: String!
  email: String!
  type: String!
  name: String!
  nameId: String!
}

type School {
  urn: ID!
  name: String!
  localAuthority: String!
  postcode: String
  registered: Boolean!
  isLocalAuthorityRegistered: Boolean
  address3: String
  county: String
  locality: String
  street: String
  phone: String
  town: String
  website: String
  distance: Int
  profile: [SchoolProfile]
}

type Charity {
  id: String!
  localAuthority: String!
  name: String!
  address: String!
  about: String!
  distance: Int
  profile: [CharityProfile]
}

type ProfileItems {
  items: String
  whatToExpect: String
  actionText: String
  productTypes: [Float]
}

type SchoolProfileHeader {
  phone: String
  email: String
  website: String
  uniformPolicy: String
}

type CharityProfileHeader {
  phone: String
  email: String
  website: String
  address: String
}

type SchoolProfile {
  name: String!
  id: String!
  localAuthority: String!
  postcode: String!
  header: SchoolProfileHeader
  about: String
  request: ProfileItems
  donate: ProfileItems
  excess: ProfileItems
}

type CharityProfile {
  name: String!
  id: String!
  localAuthority: String!
  postcode: String
  header: CharityProfileHeader
  about: String
  request: ProfileItems
  donate: ProfileItems
  excess: ProfileItems
}

type LocalAuthorityUser {
  name: String!
  firstName: String!
  lastName: String!
  jobTitle: String!
  department: String!
  email: String!
  phone: String!
  notes: String
  nameId: String!
}

type LocalAuthority {
  code: String!
  name: String!
  registered: Boolean!
}

type LocalAuthorityProfile {
  user: LocalAuthorityUser!
  localAuthority: LocalAuthority!
}

type JoinRequest {
  id: String!
  name: String!
  localAuthority: String!
  type: String!
  requestTime: Float!
  status: String!
  email: String!
  school: String
  jobTitle: String
  phone: String
  charityName: String
  charityAddress: String
  aboutCharity: String
}

type ItemQuery {
  name: String!
  type: String!
  who: String!
  email: String!
  phone: String!
  message: String!
  connection: String
  organisationType: String!
}

type SchoolUser {
  name: String!
  school: String!
  jobTitle: String!
  email: String!
  phone: String!
}

type CharityUser {
  name: String!
  jobTitle: String!
  email: String!
  phone: String!
}

type CharityDetails {
  name: String!
  address: String!
  localAuthority: String!
  about: String
}

type CharitySignUpDetails {
  charityUser: CharityUser!
  charityDetails: CharityDetails!
}

type LocalAuthorityRegisterRequest {
  name: String!
  email: String!
  message: String!
  localAuthority: String!
  type: String!
}

type LocalAuthorityStats {
  joined: Int!
  notJoined: Int!
}

type JoinRequestStats {
  school: Int!
  charity: Int!
}

type AdminStats {
  la: LocalAuthorityStats!
  joinRequests: JoinRequestStats!
  registeredSchools: Int!
  registeredCharities: Int!
}

type InstituteSearchResult {
  name: String!
  distance: Int!
  productTypes: [Int!]!
}

type Query {
  getSchoolByName(name: String!): School!
  getSchoolsByLa(name: String!): [School!]!
  getSchools: [School!]!
  getCharities: [Charity!]!
  getRegisteredSchools: [School!]!
  getRegisteredSchoolsByLa(localAuthority: String!): [School!]!
  getLocalAuthorities: [LocalAuthority!]!
  getJoinRequests: [JoinRequest!]!
  getSchoolProfile(name: String!, id: String!): SchoolProfile
  getCharityProfile(name: String!, id: String!): CharityProfile
  getLocalAuthorityUser(email: String!): LocalAuthorityUser!
  getSignUpData(id: String!): SignUpData
  getSchoolsNearby(postcode: String!, distance: Float!): [School!]!
  getCharitiesNearby(postcode: String!, distance: Float!): [Charity!]!
  getSchoolJoinRequestsByLa(localAuthority: String!): [JoinRequest!]!
  getAdminTileStats: AdminStats!
  getSchoolsNearbyWithProfile(postcode: String!, distance: Float!): [InstituteSearchResult!]!
}

type Mutation {
  registerLocalAuthority(
    name: String!
    firstName: String!
    lastName: String!
    jobTitle: String!
    department: String!
    email: String!
    phone: String!
    notes: String
    nameId: String!
  ): Boolean!

  updateSchoolProfile(key: String!, value: String!): Boolean! @aws_cognito_user_pools
  updateCharityProfile(key: String!, value: String!): Boolean! @aws_cognito_user_pools
  updateJoinRequest(id: String!, localAuthority: String!, name: String!, status: String!): Boolean!
  insertJoinRequest(
    name: String!
    localAuthority: String!
    type: String!
    email: String!
    school: String
    jobTitle: String
    phone: String
    charityName: String
    charityAddress: String
    aboutCharity: String
  ): Boolean!

  insertLocalAuthorityRegisterRequest(
    name: String!
    localAuthority: String!
    email: String!
    message: String!
    type: String!
  ): Boolean!

  insertSignUpData(
    id: String!
    email: String!
    type: String!
    name: String!
    nameId: String!
  ): Boolean!
  insertItemQuery(
    name: String!
    email: String!
    type: String!
    message: String!
    who: String!
    phone: String!
    connection: String
    organisationType: String!
  ): Boolean!

  deleteDeniedJoinRequest(name: String!): Boolean!
}

schema {
  query: Query
  mutation: Mutation
}
